1.使用框架写项目， 在浏览器代码依旧是原生的html，js css。框架帮助开发者做了很多事情，开发者只需要关注业务逻辑就可以，极大的加快的开发速度。
   如控件和数据自动绑定： 可以直接使用data里面的数据提交表单， 而不需要在使用document一套获取值，
   对控件的赋值也方便了很多， 只需要改变data的值，控件就会自动改变。
 页面参数和页面状态管理：
   页面传值对于vue来说，有很多方法使用，  父子组件传值， url传值， 或者vuex全局状态管理， 
   而原生开发， 在页面有多个参数的时候， 页面的传值和初始化要复杂很多， 
2.组件化：
   react组件化最为彻底， 可以到函数级别的组件， 高度组件化有利于维护， 组合扩展， 复用，
3.生态：
   主流的框架啊都自带生态， 不论是数据管理还是ui库都有成熟的解决方案
    强大的nodejs，添加新的组件库， 一句npm就能安装。
框架缺点：
    代码量大：使用者使用框架会将整个框架引用， 即使是有些开发中不需要的功能和组件，也要引用，
    框架更新快， 需要时间熟悉。




    