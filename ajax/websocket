你知道什么是websocket吗？
   轮询效率低，非常浪费资源(需要不断发送请求，不停链接服务器)

    WebSocket的出现，让服务器端可以主动向客户端发送信息，使得浏览器具备了实时双向通信的能力,这就是WebSocket解决的问题，属于应用层协议

    支持双向通信，实时性更强。
    更好的二进制支持。
    较少的控制开销。数据格式更加轻量级
    支持扩展。ws协议定义了扩展，用户可以扩展协议，或者实现自定义的子协议。（比如支持自定义压缩算法等）
    与http协议有个很好的兼容性， 默认端口也是80，并且握手采用http协议
   缺点：独立与http的协议，因此需要额外的项目改造，使用复杂度高，必须引入成熟的库，无法兼容低版本浏览器

   websocket是一个持久化的网络协议，可以在单个tcp连接上进行全双工通讯， 没有了request和response概念， 
   一旦建立，客户端和服务端之间可以时时进行数据传输。websocket虽然独立于http，到那时也依赖于http协议进行一次握手
   握手成功后，数据就直接从tcp通道传输， 与http无关了，
    Connection: Upgrade

   
   WebSocket 心跳：
    可能会有某些未知情况导致 socket 断开，而客户端和服务端却不知道，需要客户端定时发送一个 心跳 ping 让服务端知道自己在线，
   服务端也需要回复一个 心跳 pong 告诉客户端自己可用，否则视为断开。

    前端如何实时通信：
       轮训
       websocket