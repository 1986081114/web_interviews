一个样式加上scope之后，这个样式只会作用在当前文件，不会干扰其他组件。
vue文件在vue-loader编译后，会变成一个html文件. vue内的style，template，script， 分别编译成对应的style， html， 以及script标签。
如果连个组件内的class重名了，最后在一个html页面里，由于权重，先后顺序，会覆盖样式， 造成样式污染。

原理：
    vue中的scoped通过在DOM结构以及css样式上加上唯一不重复的标记：data-v-hash的方式，以保证唯一（postCSS完成），达到样式私有化
    每个vue文件对应一个唯一的hash，该hash可以根据文件路径名称和内容生成hash生成
    编译template标签时为每一个标签添加当前组件的hash， 
    编译style标签时， 会根据当前组件的hash通过属性选择器和组合选择器输出样式。

    <style type="text/css">
    .ParentA[data-v-183fa219] {
            color: red;
        }
</style>
<div data-v-183fa219  class="ParentA"> ParentA</div>

渲染规则：
    给每个html的dom节点加上一个不重复的data，在在每句css选择器末尾加上当前组件的data属性选择器，来私有化
    如果组件内部有其他组件， 只会给其他组件的最外层标签加上当前组件的data属性

穿透方法：
   1.给每个模板最外层加上一个唯一id，不适用scope
   2.scope + /deep/

     /deep/的效果就是让deep后面的选择器不被加上data-v-选择器。
     vue-loader 还提供了 ::v-deep 以及 >>>，效果跟 deep 是一样的，注意的是像 sass 预处理器不能解析 >>>。
