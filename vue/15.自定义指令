指令的本质就是装饰器， 是vue对html元素的扩展， 给html元素添加自定义的功能， vue编译dom时， 会找到
指令对象， 执行指令的相关方法



// 注册一个全局自定义指令 `v-focus`
Vue.directive('focus', {
  // 当被绑定的元素插入到 DOM 中时……
  inserted: function (el) {
    // 聚焦元素
    el.focus()
  }
})

//局部
directives: {
  focus: {
    // 指令的定义
    inserted: function (el) {
      el.focus()
    }
  }

钩子函数：
    bind： 只调用一次：初始化操作
    inserted：被绑定元素插入父节点时调用
     update：所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。
          但是你可以通过比较更新前后的值来忽略不必要的模板更新
     componentUpdated：指令所在组件的 VNode 及其子 VNode 全部更新后调用。
     unbind：只调用一次，指令与元素解绑时调用。

  钩子参数：
      el： 指令所绑定的对象，操作dom
      binding： 一个对象
          value：绑定的值
          oldvalue之前绑定的值
          arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 "foo"。
      vnode，生成的虚拟节点
      oldnode，上一个虚拟节点
