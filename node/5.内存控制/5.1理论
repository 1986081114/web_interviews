随着node在服务器端的广泛应用，也会出现内存泄露的问题.

v8作为node1的js脚本引擎，node在通过js使用内存时会发现只能使用部分内存(64位下1.4GB， 32位下0.7GB)，
导致node无法直接操作大内存对象，这样在单个node进程的情况下，计算机内存资源无法得到直接满足。
详情可见 -- v8引擎垃圾回收机制！

内存泄露: 
    通常造成内存泄露的原因如下：
       缓存
       队列消费不及时
       作用域未释放

    不要将内存当做缓存：
        缓存十分节省资源，命中效率更高， 但是在node中一个对象一旦被当做缓存，这意味着她将常驻老生代，缓存越多，存活的对象越多
        导致垃圾回收时即使对象不再使用无法也无法被清除。
        
       





