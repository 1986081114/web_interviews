0. node 的优缺点：
   单线程的最大的好处是不用像多线程那样处处在意状态的同步问题，没有死锁的存在，也没有线程上下文交换所带来的开销
   但也有很多缺点：
       无法利用多核CPU
       错误会引起整个应用的退出，应用的健壮性值得考验
       大量计算占用CPU导致无法继续调用异步I/O。
1. 应用场景：
     I/O密集型， 主要优势在于node利用事件循环的处理能力，能不是启动每一个线程为每一个请求服务，奸商资源占用。
                node面对网络擅长处理并行I/O， 能够有效组织起更多的硬件资源， 从而提供更好的服务。
      遗留系统的和平相处，过去大多数的系统是同步的方式编写程序，串行调用数据过程充满着等待时间，在已有的稳定的系统，并不一定要抛弃
                   可以使用node作为数据源的接口，发挥异步并行的优势。
      分布式应用， 阿里巴巴的数据平台的中间层就是使用 nodefox对数据库最划分和映射，利用node高效使用并行I/O的过程，可以高效使用数据库。

1.如何优化node镜像大小
2.node内存溢出
   node内存其实并不是和后端语言一样，对内存使用没有限制， 只是在node使用内存中， 是能使用物理内存的一部分。64位系统下约为1.4gb ，32位07gb
   原因是node运行在利用兰奇v8引擎中。
   溢出原因： v8本身分配内存较小
              js语言本身限制，程序员使用不当（创建对象， 对象引用， node本身都需要内存空间）

    解决：
       使用async/await防止事件堆积，
       增加v8内存 max-old-space-size
       使用非v8内存 如buffer
